import Head from "next/head";
import { Inter } from "next/font/google";
import styles from "@/styles/Home.module.css";
import { Header } from "@/components/Header/Header";
import { useQuery } from "@tanstack/react-query";
import { CardList } from "@/components/Card/CardList";
import { Loading } from "@/components/Loading";
import { useFetcher } from "./hooks/useFetcher";
import React, { useEffect } from "react";
import { CatResponse } from "./api/catResponse.types";
import { CatImageResponse } from "./api/catImageResponse.types";

const Home = () => {
  const inter = Inter({ subsets: ["latin"] });
  const { data: catListData, loading: catListLoading, error: catListError, fetchData: fetchCatList } = useFetcher();
  const { fetchData: fetchCatImage } = useFetcher();

  const { isLoading, error, data, refetch } = useQuery<CatResponse[], CatImageResponse, Error>({
    queryKey: ["catList"],
    queryFn: async () => {
      const catList = await fetchCatList("breeds?limit=4&page=0");
      if (!Array.isArray(catList)) {
        throw new Error("Expected an array from fetchCatList");
      }
      const catsWithImages = await Promise.all(
        catList.map(async (cat) => {
          const image = await fetchCatImage("images", cat.reference_image_id);
          return { ...cat, imageUrl: image.url };
        })
      );
      return catsWithImages;
    }
  });

  useEffect(() => {
    refetch();
  }, [catListData, refetch]);

  if (isLoading || catListLoading) return <Loading />;
  if (error || catListError) return <div>An error has occurred: {error?.message || catListError?.message}</div>;

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={`${styles.main} ${inter.className}`}>
        <Header />
        {data && <CardList cardData={data} />}
      </main>
    </>
  );
};

export default Home;
